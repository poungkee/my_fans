services:
  # PostgreSQL Database Server (Port: 5432)
  postgres:
    image: postgres:15
    container_name: fans_postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: fans_db
      POSTGRES_USER: fans_user
      POSTGRES_PASSWORD: fans_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - fans_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fans_user -d fans_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # AI Backend Service (Port: 8000)
  ai-service:
    build: ./backend/ai-service
    container_name: fans_ai_service
    ports:
      - "8000:8000"
    env_file:
      - ./backend/ai-service/.env
    networks:
      - fans_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

  # Main Backend API (Port: 3000)
  main-api:
    build: ./backend/api
    container_name: fans_main_api
    ports:
      - "3000:3000"
    env_file:
      - ./backend/.env
    environment:
      - TYPEORM_SYNC=true
    depends_on:
      postgres:
        condition: service_healthy
      ai-service:
        condition: service_healthy
    networks:
      - fans_network
    volumes:
      - ./backend/api:/app
      - /app/node_modules
      - ./backend/api/uploads:/app/uploads
    restart: unless-stopped

  # React Frontend (Port: 3001)
  frontend:
    build: ./frontend
    container_name: fans_frontend
    ports:
      - "3001:3001"
    environment:
      - REACT_APP_API_BASE=
      - REACT_APP_API_URL=http://localhost:3000
      - REACT_APP_AI_SERVICE_URL=http://localhost:8000
      - PORT=3001
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - fans_network
    depends_on:
      - main-api
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  fans_network:
    driver: bridge