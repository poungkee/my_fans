# ========================================
# Karpenter Provisioner
# 자동 스케일링 설정
# ========================================
apiVersion: karpenter.sh/v1alpha5
kind: Provisioner
metadata:
  name: default
spec:
  # 리소스 제한
  limits:
    resources:
      cpu: 1000      # 최대 1000 vCPU
      memory: 1000Gi # 최대 1000GB RAM

  # 프로비저닝 설정
  providerRef:
    name: default

  # 노드 타임아웃
  ttlSecondsAfterEmpty: 30    # 빈 노드 30초 후 삭제
  ttlSecondsUntilExpired: 604800  # 7일 후 노드 교체

  # 노드 스펙
  requirements:
    # 인스턴스 타입
    - key: karpenter.sh/capacity-type
      operator: In
      values: ["spot", "on-demand"]  # Spot 우선, 없으면 On-Demand

    - key: node.kubernetes.io/instance-type
      operator: In
      values:
        - t3.medium
        - t3a.medium
        - t3.large
        - t3a.large
        - t2.medium
        - t2.large

    # 아키텍처
    - key: kubernetes.io/arch
      operator: In
      values: ["amd64"]

    # 가용 영역
    - key: topology.kubernetes.io/zone
      operator: In
      values:
        - ap-northeast-2a
        - ap-northeast-2b
        - ap-northeast-2c

  # 라벨
  labels:
    provisioner: karpenter
    environment: production

  # Taints (선택)
  # taints:
  #   - key: spot
  #     value: "true"
  #     effect: NoSchedule

---
# ========================================
# Karpenter AWSNodeTemplate
# ========================================
apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: default
spec:
  # 서브넷 선택 (Private Subnet만)
  subnetSelector:
    karpenter.sh/discovery: "dw-fans-prod-eks"

  # 보안 그룹
  securityGroupSelector:
    karpenter.sh/discovery: "dw-fans-prod-eks"

  # IAM Instance Profile
  instanceProfile: "dw-fans-prod-eks-karpenter-node-profile"

  # AMI Family
  amiFamily: AL2  # Amazon Linux 2

  # 사용자 데이터 (부팅 스크립트)
  userData: |
    #!/bin/bash
    /etc/eks/bootstrap.sh dw-fans-prod-eks

  # 블록 디바이스 매핑
  blockDeviceMappings:
    - deviceName: /dev/xvda
      ebs:
        volumeSize: 30Gi
        volumeType: gp3
        iops: 3000
        throughput: 125
        deleteOnTermination: true
        encrypted: true

  # 메타데이터 옵션
  metadataOptions:
    httpEndpoint: enabled
    httpProtocolIPv6: disabled
    httpPutResponseHopLimit: 2
    httpTokens: required

  # 태그
  tags:
    Name: "karpenter-node"
    Environment: "production"
    ManagedBy: "Karpenter"
    Project: "FANS"
